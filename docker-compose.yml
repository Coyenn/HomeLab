services:
  nginx-proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: always
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - ./data/nginx-proxy-manager/data:/data:z
      - ./data/nginx-proxy-manager/letsencrypt:/etc/letsencrypt:z
    depends_on:
      - jellyfin
      - coder
      - gitea
      - registry
      - element
      - wiki

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    volumes:
      - ./data/jellyfin/config:/config:z
      - ./data/jellyfin/cache:/cache:z
      - ./data/jellyfin/media:/media:z
      - ./data/jellyfin/media2:/media2:z
    restart: always
    expose:
      - 8096
    env_file:
      - .env

  gitea:
    image: gitea/gitea:1.16.5
    container_name: gitea
    environment:
      - USER_UID=1000
      - USER_GID=1000
    restart: always
    volumes:
      - ./data/gitea:/data:z
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    expose:
      - 3000
    env_file:
      - .env
  
  coder:
    image: codercom/coder:1.29.0
    volumes:
      - ./data/coder:/var/run/coder
      - /var/run/docker.sock:/var/run/docker.sock
    privileged: true
    expose:
      - 7080
    restart: always
  
  registry:
    image: registry:2
    restart: always
    expose:
      - 5000
    volumes:
      - ./data/registry:/var/lib/registry:z
  
  element:
    image: vectorim/element-web:latest
    expose:
      - 80

  wiki-db:
    image: postgres:11-alpine
    environment:
      POSTGRES_DB: wiki
      POSTGRES_PASSWORD: wikijsrocks
      POSTGRES_USER: wikijs
    restart: unless-stopped
    volumes:
      - ./data/wiki/db:/var/lib/postgresql/data:z

  wiki:
    image: ghcr.io/requarks/wiki:2
    depends_on:
      - wiki-db
    environment:
      DB_TYPE: postgres
      DB_HOST: wiki-db
      DB_PORT: 5432
      DB_USER: wikijs
      DB_PASS: wikijsrocks
      DB_NAME: wiki
      VIRTUAL_HOST: wiki.home.local
      VIRTUAL_PORT: 3000
    restart: always
    expose:
      - 3000
  
  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    privileged: true
    restart: always